eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: name=${spring.application.name}:instance-id=${spring.application.instance-id:${random.value}}:port=${server.port}
    metadata-map:
      instanceId: name=${spring.application.name}:instance-id=${spring.application.instance-id:${random.value}}:port=${server.port}
resilience4j:
  ratelimiter:
    instances:
      foo-bar-rate:
        limitForPeriod: 2
        limitRefreshPeriod: 10s
  retry:
    instances:
      foo-bar:
        maxAttempts: 5
      default:
        maxAttempts: 5
        waitDuration: 1s
        enableExponentialBackoff: true
  bulkhead:
    instances:
      foo-bar-rate:
        maxConcurrentCalls: 10
server:
  port: 8200
#    port: ${PORT:0}
spring:
    application:
        name: book-service
    output:
      ansi:
        enabled: ALWAYS
    datasource:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3310/book_service_db?userTimezone=true&serverTimezone=UTC
      username: docker
      password: 1234567
    jackson:
      default-property-inclusion: NON_NULL
      serialization:
        FAIL_ON_EMPTY_BEANS: false
    jpa:
      hibernate:
        ddl-auto: update
      show-sql: true
      properties:
        dialect: org.hibernate.dialect.MySQL9Dialect
    flyway:
      url: jdbc:mysql://localhost:3310/
      schemas: book_service_db
      user: docker
      password: 1234567
springdoc:
  swagger-ui:
    operationsSorter: method
    path: /swagger-ui.html
  api-docs:
    path: /book-service/v3/api-docs
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: refresh, health, info, metrics, prometheus
  endpoint:
    refresh:
      enabled: true
    health:
      enabled: true
      show-details : always
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled : true
















